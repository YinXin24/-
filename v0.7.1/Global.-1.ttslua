--建筑槽/强化槽
  --BS = BuildingSlot
  --US = UpdateSlot
  BBS = false
  BBS1 = false
  BBS2 = false
  BBS3 = false
  BBS4 = false
  BBS5 = false

  PBS = false
  PBS1 = false
  PBS2 = false
  PBS3 = false
  PBS4 = false
  PBS5 = false

  GBS = false
  GBS1 = false
  GBS2 = false
  GBS3 = false
  GBS4 = false
  GBS5 = false

  OBS = false
  OBS1 = false
  OBS2 = false
  OBS3 = false
  OBS4 = false
  OBS5 = false

  BUS1 = 0
  BUS2 = 0
  BUS3 = 0
  BUS4 = 0
  BUS5 = 0

  PUS1 = 0
  PUS2 = 0
  PUS3 = 0
  PUS4 = 0
  PUS5 = 0

  GUS1 = 0
  GUS2 = 0
  GUS3 = 0
  GUS4 = 0
  GUS5 = 0

  OUS1 = 0
  OUS2 = 0
  OUS3 = 0
  OUS4 = 0
  OUS5 = 0
--国力及国力上限参数
  IntPowerBlueLimit = 0
  IntPowerBlue = 0
  IntPowerPurpleLimit = 0
  IntPowerPurple = 0
  IntPowerGreenLimit = 0
  IntPowerGreen = 0
  IntPowerOrangeLimit = 0
  IntPowerOrange = 0
--科研力量参数
  IntSciBlue = 0
  IntSciPurple = 0
  IntSciGreen = 0
  IntSciOrange = 0
--建筑槽卡牌指示器
  BlueBuildCard1 = nil
  BlueBuildCard2 = nil
  BlueBuildCard3 = nil
  BlueBuildCard4 = nil
  BlueBuildCard5 = nil

  PurpleBuildCard1 = nil
  PurpleBuildCard2 = nil
  PurpleBuildCard3 = nil
  PurpleBuildCard4 = nil
  PurpleBuildCard5 = nil

  GreenBuildCard1 = nil
  GreenBuildCard2 = nil
  GreenBuildCard3 = nil
  GreenBuildCard4 = nil
  GreenBuildCard5 = nil

  OrangeBuildCard1 = nil
  OrangeBuildCard2 = nil
  OrangeBuildCard3 = nil
  OrangeBuildCard4 = nil
  OrangeBuildCard5 = nil
--是否读取新卡牌进入出牌区
  NewCardEnter = true
  --色值 修改自https://snipplr.com/view/40782/color-to-rgb-value-table-in-lua
      -- Color to RGB value table for Lua coding with Corona
      -- Color values copied from "http://www.w3.org/TR/SVG/types.html#ColorKeywords"
      --
      -- Usage for Corona toolkit:
      -- add this file "colors-rgb.lua" to your working directory
      -- add following directive to any file that will use the colors by name:
      -- require "colors-rgb"
      --
      -- in the code, instead of using for example "{210, 105, 30}" for the "chocolate" color,
      -- use "colorsRGB.chocolate" or colorsRGB[chocolate]
      -- or if you need the individual R,G,B values, you can use either:
      -- colorsRGB.chocolate[1] or colorsRGB.R("chocolate") for the R-value
      -- or if you need the RGB values for a function list, you can use
      -- colorsRGB.RGB("chocolate") that returns the multi value list "210 105 30"
      -- this can be used for input in for example "body:setFillColor()", like:
      -- body:setFillColor(colorsRGB.RGB("chocolate"))
      --
      -- Enjoy, Frank (Sep 19, 2010)


      colorsRGB = {
      aliceblue = { 240/255, 248/255, 255/255},
      antiquewhite = { 250/255, 235/255, 215/255},
      aqua = { 0/255, 255/255, 255/255},
      aquamarine = { 127/255, 255/255, 212/255},
      azure = {240/255, 255/255, 255/255},
      beige = {245/255, 245/255, 220/255},
      bisque = {255/255, 228/255, 196/255},
      black = { 0/255, 0/255, 0/255},
      blanchedalmond = {255/255, 235/255, 205/255},
      blue = { 0/255, 0/255, 255/255},
      blueviolet = { 138/255, 43/255, 226/255},
      brown = { 165/255, 42/255, 42/255},
      burlywood = { 222/255, 184/255, 135/255},
      cadetblue = { 95/255, 158/255, 160/255},
      chartreuse = { 127/255, 255/255, 0/255},
      chocolate = { 210/255, 105/255, 30/255},
      coral = { 255/255, 127/255, 80/255},
      cornflowerblue = { 100/255, 149/255, 237/255},
      cornsilk = { 255/255, 248/255, 220/255},
      crimson = { 220/255, 20/255, 60/255},
      cyan = { 0/255, 255/255, 255/255},
      darkblue = { 0/255, 0/255, 139/255},
      darkcyan = { 0/255, 139/255, 139/255},
      darkgoldenrod = { 184/255, 134/255, 11/255},
      darkgray = { 169/255, 169/255, 169/255},
      darkgreen = { 0/255, 100/255, 0/255},
      darkgrey = { 169/255, 169/255, 169/255},
      darkkhaki = { 189/255, 183/255, 107/255},
      darkmagenta = { 139/255, 0/255, 139/255},
      darkolivegreen = { 85/255, 107/255, 47/255},
      darkorange = { 255/255, 140/255, 0/255},
      darkorchid = { 153/255, 50/255, 204/255},
      darkred = { 139/255, 0/255, 0/255},
      darksalmon = { 233/255, 150/255, 122/255},
      darkseagreen = { 143/255, 188/255, 143/255},
      darkslateblue = { 72/255, 61/255, 139/255},
      darkslategray = { 47/255, 79/255, 79/255},
      darkslategrey = { 47/255, 79/255, 79/255},
      darkturquoise = { 0/255, 206/255, 209/255},
      darkviolet = { 148/255, 0/255, 211/255},
      deeppink = { 255/255, 20/255, 147/255},
      deepskyblue = { 0/255, 191/255, 255/255},
      dimgray = { 105/255, 105/255, 105/255},
      dimgrey = { 105/255, 105/255, 105/255},
      dodgerblue = { 30/255, 144/255, 255/255},
      firebrick = { 178/255, 34/255, 34/255},
      floralwhite = {255/255, 250/255, 240/255},
      forestgreen = { 34/255, 139/255, 34/255},
      fuchsia = { 255/255, 0/255, 255/255},
      gainsboro = { 220/255, 220/255, 220/255},
      ghostwhite = { 248/255, 248/255, 255/255},
      gold = { 255/255, 215/255, 0/255},
      goldenrod = { 218/255, 165/255, 32/255},
      gray = { 128/255, 128/255, 128/255},
      grey = { 128/255, 128/255, 128/255},
      green = { 0/255, 128/255, 0/255},
      greenyellow = { 173/255, 255/255, 47/255},
      honeydew = { 240/255, 255/255, 240/255},
      hotpink = { 255/255, 105/255, 180/255},
      indianred = { 205/255, 92/255, 92/255},
      indigo = { 75/255, 0/255, 130/255},
      ivory = { 255/255, 255/255, 240/255},
      khaki = { 240/255, 230/255, 140/255},
      lavender = { 230/255, 230/255, 250/255},
      lavenderblush = { 255/255, 240/255, 245/255},
      lawngreen = { 124/255, 252/255, 0/255},
      lemonchiffon = { 255/255, 250/255, 205/255},
      lightblue = { r=173/255, g=216/255, b=230/255},
      lightcoral = { 240/255, 128/255, 128/255},
      lightcyan = { 224/255, 255/255, 255/255},
      lightgoldenrodyellow = { 250/255, 250/255, 210/255},
      lightgray = { 211/255, 211/255, 211/255},
      lightgreen = { 144/255, 238/255, 144/255},
      lightgrey = { 211/255, 211/255, 211/255},
      lightpink = { 255/255, 182/255, 193/255},
      lightsalmon = { 255/255, 160/255, 122/255},
      lightseagreen = { 32/255, 178/255, 170/255},
      lightskyblue = { 135/255, 206/255, 250/255},
      lightslategray = { 119/255, 136/255, 153/255},
      lightslategrey = { 119/255, 136/255, 153/255},
      lightsteelblue = { 176/255, 196/255, 222/255},
      lightyellow = { 255/255, 255/255, 224/255},
      lime = { 0/255, 255/255, 0/255},
      limegreen = { 50/255, 205/255, 50/255},
      linen = { 250/255, 240/255, 230/255},
      magenta = { 255/255, 0/255, 255/255},
      maroon = { 128/255, 0/255, 0/255},
      mediumaquamarine = { 102/255, 205/255, 170/255},
      mediumblue = { 0/255, 0/255, 205/255},
      mediumorchid = { 186/255, 85/255, 211/255},
      mediumpurple = { 147/255, 112/255, 219/255},
      mediumseagreen = { 60/255, 179/255, 113/255},
      mediumslateblue = { 123/255, 104/255, 238/255},
      mediumspringgreen = { 0/255, 250/255, 154/255},
      mediumturquoise = { 72/255, 209/255, 204/255},
      mediumvioletred = { 199/255, 21/255, 133/255},
      midnightblue = { 25/255, 25/255, 112/255},
      mintcream = { 245/255, 255/255, 250/255},
      mistyrose = { 255/255, 228/255, 225/255},
      moccasin = { 255/255, 228/255, 181/255},
      navajowhite = { 255/255, 222/255, 173/255},
      navy = { 0/255, 0/255, 128/255},
      oldlace = { 253/255, 245/255, 230/255},
      olive = { 128/255, 128/255, 0/255},
      olivedrab = { 107/255, 142/255, 35/255},
      orange = { 255/255, 165/255, 0/255},
      orangered = { 255/255, 69/255, 0/255},
      orchid = { 218/255, 112/255, 214/255},
      palegoldenrod = { 238/255, 232/255, 170/255},
      palegreen = { 152/255, 251/255, 152/255},
      paleturquoise = { 175/255, 238/255, 238/255},
      palevioletred = { 219/255, 112/255, 147/255},
      papayawhip = { 255/255, 239/255, 213/255},
      peachpuff = { 255/255, 218/255, 185/255},
      peru = { 205/255, 133/255, 63/255},
      pink = { 255/255, 192/255, 203/255},
      plum = { 221/255, 160/255, 221/255},
      powderblue = { 176/255, 224/255, 230/255},
      purple = { 128/255, 0/255, 128/255},
      red = { 255/255, 0/255, 0/255},
      rosybrown = { 188/255, 143/255, 143/255},
      royalblue = { 65/255, 105/255, 225/255},
      saddlebrown = { 139/255, 69/255, 19/255},
      salmon = { 250/255, 128/255, 114/255},
      sandybrown = { 244/255, 164/255, 96/255},
      seagreen = { 46/255, 139/255, 87/255},
      seashell = { 255/255, 245/255, 238/255},
      sienna = { 160/255, 82/255, 45/255},
      silver = { 192/255, 192/255, 192/255},
      skyblue = { 135/255, 206/255, 235/255},
      slateblue = { 106/255, 90/255, 205/255},
      slategray = { 112/255, 128/255, 144/255},
      slategrey = { 112/255, 128/255, 144/255},
      snow = { 255/255, 250/255, 250/255},
      springgreen = { 0/255, 255/255, 127/255},
      steelblue = { 70/255, 130/255, 180/255},
      tan = { 210/255, 180/255, 140/255},
      teal = { 0/255, 128/255, 128/255},
      thistle = { 216/255, 191/255, 216/255},
      tomato = { 255/255, 99/255, 71/255},
      turquoise = { 64/255, 224/255, 208/255},
      violet = { 238/255, 130/255, 238/255},
      wheat = { 245/255, 222/255, 179/255},
      white = { 255/255, 255/255, 255/255},
      whitesmoke = { 245/255, 245/255, 245/255},
      yellow = { 255/255, 255/255, 0/255},
      yellowgreen = { 154/255, 205/255, 50/255}
      }

      colorsRGB.R = function (name)
      return colorsRGB[name][1]
      end

      colorsRGB.G = function (name)
      return colorsRGB[name][2]
      end

      colorsRGB.B = function (name)
      return colorsRGB[name][3]
      end

      colorsRGB.RGB = function (name)
      return colorsRGB[name][1],colorsRGB[name][2],colorsRGB[name][3]
      end


function onLoad()
--首先进行回合的玩家
LastTurnGuy = ''
--回合按钮
BlueTurnBut = getObjectFromGUID('1335e2')
OrangeTurnBut = getObjectFromGUID('bebe28')
GreenTurnBut = getObjectFromGUID('affbe3')
PurpleTurnBut = getObjectFromGUID('e78946')
params = {
        click_function = "Turn_func",
        function_owner = self,
        position       = {0.9, 0.08, 0},
        rotation       = {0, 180, 0},
        width          = 300,
        height         = 450,
        color          = colorsRGB.red,
        tooltip        = "回合结束",
    }
    BlueTurnBut.createButton(params)
    OrangeTurnBut.createButton(params)
    GreenTurnBut.createButton(params)
    PurpleTurnBut.createButton(params)
--当前回合数
TurnNum = 0
--首先进行回合标识
FirstTurnToken = getObjectFromGUID('59ed99')
--回合计数器标识
TurnToken = getObjectFromGUID('cdb904')
--局势卡牌
EventTurn0 = getObjectFromGUID(EventTurn0_GUID)
EventTurn5 = getObjectFromGUID(EventTurn5_GUID)
EventTurn10 = getObjectFromGUID(EventTurn10_GUID)
EventTurn15 = getObjectFromGUID(EventTurn15_GUID)
EventTurn20 = getObjectFromGUID(EventTurn20_GUID)
EventTurn25 = getObjectFromGUID(EventTurn25_GUID)
--回合计数器位置
TurnZone0 = getObjectFromGUID('0a023e')
TurnZone1 = getObjectFromGUID('d52591')
TurnZone2 = getObjectFromGUID('737fd0')
TurnZone3 = getObjectFromGUID('b5fd63')
TurnZone4 = getObjectFromGUID('a0b064')
TurnZone5 = getObjectFromGUID('5ac814')
TurnZone6 = getObjectFromGUID('c147a8')
TurnZone7 = getObjectFromGUID('6cd3b7')
TurnZone8 = getObjectFromGUID('012130')
TurnZone9 = getObjectFromGUID('46f85e')
TurnZone10 = getObjectFromGUID('079b10')
TurnZone11 = getObjectFromGUID('3f5252')
TurnZone12 = getObjectFromGUID('656add')
TurnZone13 = getObjectFromGUID('f18eb4')
TurnZone14 = getObjectFromGUID('739d46')
TurnZone15 = getObjectFromGUID('6f83bb')
TurnZone16 = getObjectFromGUID('07364d')
TurnZone17 = getObjectFromGUID('f9be9c')
TurnZone18 = getObjectFromGUID('8a9da0')
TurnZone19 = getObjectFromGUID('db64cc')
TurnZone20 = getObjectFromGUID('406c96')
TurnZone21 = getObjectFromGUID('a1853a')
TurnZone22 = getObjectFromGUID('c65ee5')
TurnZone23 = getObjectFromGUID('6aaa31')
TurnZone24 = getObjectFromGUID('5a532a')
TurnZone25 = getObjectFromGUID('88bd15')
TurnZone26 = getObjectFromGUID('839cb3')
TurnZone27 = getObjectFromGUID('04f224')
TurnZone28 = getObjectFromGUID('d14b57')
TurnZone29 = getObjectFromGUID('cd5d20')

--势力科研力量数值
SciBlue = getObjectFromGUID('5bb180')
SciOrange = getObjectFromGUID('99ade1')
SciPurple = getObjectFromGUID('ee4b63')
SciGreen = getObjectFromGUID('6e13c9')
--势力国力上限数值
PowerLimitBlue = getObjectFromGUID('dc9756')
PowerLimitPurple = getObjectFromGUID('a666ed')
PowerLimitGreen = getObjectFromGUID('541791')
PowerLimitOrange = getObjectFromGUID('0e2c0d')
--势力国力数值
PowerBlue = getObjectFromGUID('91faa4')
PowerPurple = getObjectFromGUID('c63215')
PowerGreen = getObjectFromGUID('ff1b8e')
PowerOrange = getObjectFromGUID('d15b7b')
--发牌区
CardZoneBlue = getObjectFromGUID("e2a113")
CardZonePurple = getObjectFromGUID("fd6834")
CardZoneOrange = getObjectFromGUID('ae294c')
CardZoneGreen = getObjectFromGUID('6ccf7b')
--移动回合标识区
TurnZoneBlue = getObjectFromGUID("2ed21f")
TurnZonePurple = getObjectFromGUID("20bbc9")
TurnZoneOrange = getObjectFromGUID('9d759e')
TurnZoneGreen = getObjectFromGUID('bae232')

end


function onUpdate()


end
function onObjectEnterScriptingZone(zone, enter_object)
--获取卡牌信息
CardType = enter_object.getDescription()
CardName = enter_object.getName()
CardRotate = enter_object.getRotation().y
CardGUID = enter_object.guid
ZoneColor = colorsRGB.white
--获取发牌区信息
ZoneName = zone.getName()
ZoneType = zone.getDescription()
--决定最后进行回合的玩家
if (zone.guid == TurnZoneBlue.guid)
then if (enter_object.guid == FirstTurnToken.guid)
then Turn_func(true, '蓝方')
end
end
if (zone.guid == TurnZoneGreen.guid)
then if (enter_object.guid == FirstTurnToken.guid)
then Turn_func(true, '绿方')
end
end
if (zone.guid == TurnZoneOrange.guid)
then if (enter_object.guid == FirstTurnToken.guid)
then Turn_func(true, '橙方')
end
end
if (zone.guid == TurnZonePurple.guid)
then if (enter_object.guid == FirstTurnToken.guid)
then Turn_func(true, '紫方')
end
end
--回合计数器移动
if (ZoneType == '回合') and (CardType == '局势')
then if (ZoneName == '0')
      then
        printToAll('揭露终局事件:'..CardName)
        EventTurn0 = getObjectFromGUID(CardGUID)
      end
     if (ZoneName == '5')
      then
        EventTurn5 = getObjectFromGUID(CardGUID)
      end
     if (ZoneName == '10')
      then
        EventTurn10 = getObjectFromGUID(CardGUID)
      end
     if (ZoneName == '15')
      then
        EventTurn15 = getObjectFromGUID(CardGUID)
      end
    if (ZoneName == '20')
      then
        EventTurn20 = getObjectFromGUID(CardGUID)
      end
    if (ZoneName == '25')
      then
        EventTurn25 = getObjectFromGUID(CardGUID)
      end
end
if (ZoneType == '回合') and (enter_object.guid == TurnToken.guid)
then if (ZoneName == '0') and (TurnNum > 0)
  then TurnNum = 30
    printToAll('---------第'.. TurnNum .. '轮---------', colorsRGB.gold)
    printToAll('-----------疲劳-----------', colorsRGB.red)
  else
    TurnNum = ZoneName + 0
    printToAll('---------第'.. TurnNum .. '轮---------', colorsRGB.gold)
  end
  if (TurnNum == 30) and (EventTurn0 ~= nil)
  then printToAll('触发终局事件:'.. EventTurn0.getName(), colorsRGB.khaki)
  end
    if (TurnNum == 5) and (EventTurn5 ~= nil)
    then
      EventTurn5.flip()
      printToAll('触发局势事件:'.. EventTurn5.getName(), colorsRGB.khaki)
    end
    if (TurnNum == 10) and (EventTurn10 ~= nil)
    then
      EventTurn10.flip()
      printToAll('触发局势事件:'.. EventTurn10.getName(), colorsRGB.khaki)
    end
    if (TurnNum == 15) and (EventTurn15 ~= nil)
    then
      EventTurn15.flip()
      printToAll('触发局势事件:'.. EventTurn15.getName(), colorsRGB.khaki)
    end
    if (TurnNum == 20) and (EventTurn20 ~= nil)
    then
      EventTurn20.flip()
      printToAll('触发局势事件:'.. EventTurn20.getName(), colorsRGB.khaki)
    end
    if (TurnNum == 25) and (EventTurn25 ~= nil)
    then
      EventTurn25.flip()
      printToAll('触发局势事件:'.. EventTurn25.getName(), colorsRGB.khaki)
    end
end
--手牌区
if (zone.guid == CardZoneBlue.guid) or (zone.guid == CardZoneGreen.guid) or (zone.guid == CardZoneOrange.guid) or (zone.guid == CardZonePurple.guid)
then if (enter_object.getRotation().z < 20) or (enter_object.getRotation().z >340)
then if (enter_object.getRotation().x < 20) or (enter_object.getRotation().x >340)
then if (NewCardEnter == true)
then


--设定使用卡牌效果所需的旋转角度
UCAngle1, UCAngle2 = 0.00, 0.00
if (zone.guid == CardZoneBlue.guid)
then UCAngle1, UCAngle2 = 120.00, 240.00
     ZoneColor = colorsRGB.aqua
end
if (zone.guid == CardZonePurple.guid)
then UCAngle1, UCAngle2 = 30.00, 150.00
     ZoneColor = colorsRGB.violet
end
if (zone.guid == CardZoneGreen.guid)
then UCAngle1, UCAngle2 = 60.00, 300.00
     ZoneColor = colorsRGB.lightgreen
end
if (zone.guid == CardZoneOrange.guid)
then UCAngle1, UCAngle2 = 210.00, 330.00
     ZoneColor = colorsRGB.orange
end
--卡牌类型识别，发送使用结果
  --指令及反制牌
if (CardType == '指令') or (CardType == '反制')
then
    if (UCAngle2 > CardRotate) and (CardRotate > UCAngle1)
        then if (zone.guid == CardZoneGreen.guid)
          then printToAll(ZoneName..'将'..CardName..'兑换为能源', ZoneColor)
          else printToAll(ZoneName..'使用'..CardType..CardName, ZoneColor)
          end
        else if (zone.guid == CardZoneGreen.guid)
          then printToAll(ZoneName..'使用'..CardType..CardName, ZoneColor)
          else printToAll(ZoneName..'将'..CardName..'兑换为能源', ZoneColor)
          end
        end
end
  --建筑及强化牌
if (CardType == '建筑') or (CardType == '强化')
then
    if (UCAngle2 > CardRotate) and (CardRotate > UCAngle1)
        then if (zone.guid == CardZoneGreen.guid)
          then printToAll(ZoneName..'将'..CardName..'兑换为能源', ZoneColor)
          else printToAll(ZoneName..'部署'..CardType..CardName, ZoneColor)
          end
        else if (zone.guid == CardZoneGreen.guid)
          then printToAll(ZoneName..'部署'..CardType..CardName, ZoneColor)
          else printToAll(ZoneName..'将'..CardName..'兑换为能源', ZoneColor)
          end
        end
end
--事件牌
if (CardType == '事件')
then printToAll(ZoneName..'触发'..CardType..'：'..CardName, ZoneColor)
end
  --势力牌及选择势力
if (CardType == '势力')
then if (ZoneName == '蓝方') and (BBS1 == false)
  then
    enter_object.setPositionSmooth({-8.53, 1.05, -27.71}, false, false) --卡牌位置
    enter_object.setRotationSmooth({0.00, 180.00, 0.00}, false, false)  --卡牌角度
    BBS1 = true                                                        --关闭建筑槽
    BlueBuildCard1 = getObjectFromGUID(enter_object.guid)              --创建建筑卡牌指针
    SetForceBoard(zone, CardName)                                  --调用设置势力函数
  end
  if (ZoneName == '紫方') and (PBS1 == false)
    then
      enter_object.setPositionSmooth({27.68, 1.05, -9.15}, false, false)
      enter_object.setRotationSmooth({0.00, 90.02, 0.00}, false, false)
      PBS1 = true
      PurpleBuildCard1 = getObjectFromGUID(enter_object.guid)
      SetForceBoard(zone, CardName)
    end
    if (ZoneName == '橙方') and (OBS1 == false)
      then
        enter_object.setPositionSmooth({-27.68, 1.05, 8.29}, false, false)
        enter_object.setRotationSmooth({0.00, 269.99, 0.00}, false, false)
        OBS1 = true
        OrangeBuildCard1 = getObjectFromGUID(enter_object.guid)
        SetForceBoard(zone, CardName)
      end
      if (ZoneName == '绿方') and (GBS1 == false)
        then
          enter_object.setPositionSmooth({9.14, 1.05, 27.80}, false, false)
          enter_object.setRotationSmooth({0.00, 0.01, 0.00}, false, false)
          GBS1 = true
          GreenBuildCard1 = getObjectFromGUID(enter_object.guid)
          SetForceBoard(zone, CardName)

        end
end
end
end
end
end
end
--势力设定函数
function SetForceBoard(zone, ForceName)
Color = zone.getName()
if (ForceName == '星际联合-贸易联合体总部')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 3         --国力上限
          IntPowerBlue = 3              --国力
          BUS1 = 1                      --强化槽
          IntSciBlue = IntSciBlue + 1   --科研力量

     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 3
          IntPowerPurple = 3
          PUS1 = 1
          IntSciPurple = IntSciPurple + 1
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 3
          IntPowerGreen = 3
          GUS1 = 1
          IntSciGreen = IntSciGreen + 1
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 3
          IntPowerOrange = 3
          OUS1 = 1
          IntSciOrange = IntSciOrange + 1
     end
     printToAll(Color..'选择势力星际联合', colorsRGB.gold)
     zone.setName('星际联合')
end

if (ForceName == '卡博尔帝国-第三司令部')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 4
          IntPowerBlue = 4
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 4
          IntPowerPurple = 4
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 4
          IntPowerGreen = 4
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 4
          IntPowerOrange = 4
     end
     printToAll(Color..'选择势力卡博尔帝国', colorsRGB.gold)
     zone.setName('卡博尔帝国')
end

if (ForceName == '乌尔义军-深空黑点基地')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 3
          IntPowerBlue = 3
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 3
          IntPowerPurple = 3
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 3
          IntPowerGreen = 3
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 3
          IntPowerOrange = 3
     end
     printToAll(Color..'选择势力乌尔义军', colorsRGB.gold)
     zone.setName('乌尔义军')
end

if (ForceName == '法利西亚联邦-联合舰队')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 3
          IntPowerBlue = 3
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 3
          IntPowerPurple = 3
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 3
          IntPowerGreen = 3
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 3
          IntPowerOrange = 3
     end
     printToAll(Color..'选择势力法利西亚联邦', colorsRGB.gold)
     zone.setName('法利西亚联邦')
end

if (ForceName == '虚空舰队-虚空之心母舰')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 2
          IntPowerBlue = 2
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 2
          IntPowerPurple = 2
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 2
          IntPowerGreen = 2
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 2
          IntPowerOrange = 2
     end
     printToAll(Color..'选择势力虚空舰队', colorsRGB.gold)
     zone.setName('虚空舰队')
end

if (ForceName == '不结盟运动-防御委员会')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 3
          IntPowerBlue = 3
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 3
          IntPowerPurple = 3
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 3
          IntPowerGreen = 3
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 3
          IntPowerOrange = 3
     end
     printToAll(Color..'选择势力不结盟运动', colorsRGB.gold)
     zone.setName('不结盟运动')
end

if (ForceName == '赛伯利安星联-先祖级母舰')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 1
          IntPowerBlue = 1
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 1
          IntPowerPurple = 1
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 1
          IntPowerGreen = 1
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 1
          IntPowerOrange = 1
     end
     printToAll(Color..'选择势力赛伯利安星联', colorsRGB.gold)
     zone.setName('赛伯利安星联')
end

if (ForceName == '卡博尔帝国-日蚀级超无畏舰')
then if (Color == '蓝方')
     then IntPowerBlueLimit = 4
          IntPowerBlue = 4
     end
     if (Color == '紫方')
     then IntPowerPurpleLimit = 4
          IntPowerPurple = 4
     end
     if (Color == '绿方')
     then IntPowerGreenLimit = 4
          IntPowerGreen = 4
     end
     if (Color == '橙方')
     then IntPowerOrangeLimit = 4
          IntPowerOrange = 4
     end
     printToAll(Color..'选择势力卡博尔帝国', colorsRGB.gold)
     zone.setName('卡博尔帝国')
end
SetPowerAndSci()
end

function SetPowerAndSci() --设定国力&国力上限&科研
  SciOrange.setPositionSmooth({-29.31, 1.23, -4.74 - IntSciOrange * 0.84}, false, false)
  SciGreen.setPositionSmooth({-3.91 - IntSciGreen * 0.84, 1.23, 29.38}, false, false)
  SciPurple.setPositionSmooth({29.32, 1.25, 3.88 + IntSciPurple * 0.84}, false, false)
  SciBlue.setPositionSmooth({4.51 + IntSciBlue * 0.84, 1.23, -29.38}, false, false)
  PowerLimitBlue.setPositionSmooth({IntPowerBlueLimit * 1.17 - 9.29, 1.23, -23.88}, false, false)
  PowerBlue.setPositionSmooth({IntPowerBlue * 1.17 - 9.29, 1.35, -23.88}, false, false)
  PowerLimitPurple.setPositionSmooth({23.85, 1.23, IntPowerPurpleLimit * 1.17 - 9.87}, false, false)
  PowerPurple.setPositionSmooth({23.85, 1.35, IntPowerPurple * 1.17 - 9.87}, false, false)
  PowerLimitGreen.setPositionSmooth({9.92 - IntPowerGreenLimit * 1.17, 1.23, 23.97}, false, false)
  PowerGreen.setPositionSmooth({9.92 - IntPowerGreen * 1.17, 1.35, 23.97}, false, false)
  PowerLimitOrange.setPositionSmooth({-23.85, 1.23, 9.02 - IntPowerOrangeLimit * 1.17}, false, false)
  PowerOrange.setPositionSmooth({-23.85, 1.35, 9.02 - IntPowerOrange * 1.17}, false, false)
end



function SetBuildButton(TurnBut)
  TurnBut.createButton({
    click_function = 'setCard',
    function_owner = self,
    position       = {0, 0.1, 0},
    rotation       = BuildToken.getRotation(),
    scale          = {1, 1, 1},
    width          = 500,
    height         = 500,
    color          = colorsRGB.red,
    tooltip        = '部署到此建筑槽',
  })
end


function removeBlueButton()
  if (BBS2 == false)
  then BlueBuild2.removeButton(0)
  end
  if (BBS3 == false)
  then BlueBuild3.removeButton(0)
  end
  if (BBS4 == false)
  then BlueBuild4.removeButton(0)
  end
  if (BBS5 == false)
  then BlueBuild5.removeButton(0)
  end
end

function removePurpleButton()
  if (PBS2 == false)
  then PurpleBuild2.removeButton(0)
  end
  if (PBS3 == false)
  then PurpleBuild3.removeButton(0)
  end
  if (PBS4 == false)
  then PurpleBuild4.removeButton(0)
  end
  if (PBS5 == false)
  then PurpleBuild5.removeButton(0)
  end
end

function removeOrangeButton()
  if (OBS2 == false)
  then OrangeBuild2.removeButton(0)
  end
  if (OBS3 == false)
  then OrangeBuild3.removeButton(0)
  end
  if (OBS4 == false)
  then OrangeBuild4.removeButton(0)
  end
  if (OBS5 == false)
  then OrangeBuild5.removeButton(0)
  end
end

function removeGreenButton()
  if (GBS2 == false)
  then GreenBuild2.removeButton(0)
  end
  if (GBS3 == false)
  then GreenBuild3.removeButton(0)
  end
  if (GBS4 == false)
  then GreenBuild4.removeButton(0)
  end
  if (GBS5 == false)
  then GreenBuild5.removeButton(0)
  end
end

function Turn_func(obj, color, alt_click)


  if (obj == true)
  then LastTurnGuy = color
  printToAll(color..'最后进行回合', colorsRGB.gold)
else
  if (obj.guid == BlueTurnBut.guid)
  then
    printToAll('------蓝方结束回合------', colorsRGB.red)
    if (LastTurnGuy == '蓝方')
    then EndTurn_func(1)
    end
  end
  if (obj.guid == GreenTurnBut.guid)
  then
    printToAll('------绿方结束回合------', colorsRGB.red)
    if (LastTurnGuy == '绿方')
    then EndTurn_func(1)
    end
  end
  if (obj.guid == OrangeTurnBut.guid)
  then
    printToAll('------橙方结束回合------', colorsRGB.red)
    if (LastTurnGuy == '橙方')
    then EndTurn_func(1)
    end
  end
  if (obj.guid == PurpleTurnBut.guid)
  then
    printToAll('------紫方结束回合------', colorsRGB.red)
    if (LastTurnGuy == '紫方')
    then EndTurn_func(1)
    end
  end
end
end

function EndTurn_func(Plus)
 TurnNum = TurnNum + Plus
 if (TurnNum == 1)
 then TurnToken.setPositionSmooth({-9.65, 1.16, 2.15},false,false)
 end
 if (TurnNum == 2)
 then TurnToken.setPositionSmooth({-8.68, 1.16, 3.96},false,false)
 end
 if (TurnNum == 3)
 then TurnToken.setPositionSmooth({-7.67, 1.16, 5.69},false,false)
 end
 if (TurnNum == 4)
 then TurnToken.setPositionSmooth({-6.63, 1.16, 7.43},false,false)
 end
 if (TurnNum == 5)
 then TurnToken.setPositionSmooth({-4.93, 1.16, 9.45},false,false)
 end
 if (TurnNum == 6)
 then TurnToken.setPositionSmooth({-2.26, 1.11, 9.90},false,false)
 end
 if (TurnNum == 7)
 then TurnToken.setPositionSmooth({-0.26, 1.16, 9.91},false,false)
 end
 if (TurnNum == 8)
 then TurnToken.setPositionSmooth({1.74, 1.16, 9.90},false,false)
 end
 if (TurnNum == 9)
 then TurnToken.setPositionSmooth({3.77, 1.16, 9.91},false,false)
 end
 if (TurnNum == 10)
 then TurnToken.setPositionSmooth({6.38, 1.16, 9.50},false,false)
 end
 if (TurnNum == 11)
 then TurnToken.setPositionSmooth({8.15, 1.16, 7.41},false,false)
 end
 if (TurnNum == 12)
 then TurnToken.setPositionSmooth({9.17, 1.16, 5.69},false,false)
 end
 if (TurnNum == 13)
 then TurnToken.setPositionSmooth({10.15, 1.16, 3.93},false,false)
 end
 if (TurnNum == 14)
 then TurnToken.setPositionSmooth({11.18, 1.16, 2.19},false,false)
 end
 if (TurnNum == 15)
 then TurnToken.setPositionSmooth({12.12, 1.16, -0.42},false,false)
 end
 if (TurnNum == 16)
 then TurnToken.setPositionSmooth({11.14, 1.16, -2.82},false,false)
 end
 if (TurnNum == 17)
 then TurnToken.setPositionSmooth({10.12, 1.16, -4.60},false,false)
 end
 if (TurnNum == 18)
 then TurnToken.setPositionSmooth({9.12, 1.16, -6.34},false,false)
 end
 if (TurnNum == 19)
 then TurnToken.setPositionSmooth({8.14, 1.16, -8.08},false,false)
 end
 if (TurnNum == 20)
 then TurnToken.setPositionSmooth({6.50, 1.13, -10.22},false,false)
 end
 if (TurnNum == 21)
 then TurnToken.setPositionSmooth({3.77, 1.15, -10.71},false,false)
 end
 if (TurnNum == 22)
 then TurnToken.setPositionSmooth({1.72, 1.16, -10.66},false,false)
 end
 if (TurnNum == 23)
 then TurnToken.setPositionSmooth({-0.28, 1.16, -10.59},false,false)
 end
 if (TurnNum == 24)
 then TurnToken.setPositionSmooth({-2.26, 1.13, -10.65},false,false)
 end
 if (TurnNum == 25)
 then TurnToken.setPositionSmooth({-4.99, 1.16, -10.29},false,false)
 end
 if (TurnNum == 26)
 then TurnToken.setPositionSmooth({-6.60, 1.14, -8.15},false,false)
 end
 if (TurnNum == 27)
 then TurnToken.setPositionSmooth({-7.63, 1.16, -6.37},false,false)
 end
 if (TurnNum == 28)
 then TurnToken.setPositionSmooth({-8.63, 1.16, -4.60},false,false)
 end
 if (TurnNum == 29)
 then TurnToken.setPositionSmooth({-9.67, 1.16, -2.87},false,false)
 end
 if (TurnNum == 30)
 then TurnToken.setPositionSmooth({-10.85, 1.14, -0.36},false,false)
 end
end